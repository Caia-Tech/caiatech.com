---
import BaseLayout from '../../layouts/BaseLayout.astro';

// SEO metadata
const seoTitle = "69 Free Developer Tools - JSON, Base64, Hash, UUID & More | Caiatech";
const seoDescription = "Professional developer tools running 100% in your browser. JSON formatter, Base64 encoder, hash generator, UUID creator, and 65+ more tools. Zero tracking, no servers, complete privacy.";
const canonicalURL = "https://caiatech.com/tools/";

const categories = {
  'Core Utilities': {
    icon: '‚ö°',
    color: '#00d4ff',
    tools: [
      { name: 'JSON Formatter', url: '/tools/json', icon: '{}', description: 'Format, validate, and beautify JSON' },
      { name: 'Base64 Encoder', url: '/tools/base64', icon: 'b64', description: 'Encode and decode Base64' },
      { name: 'UUID Generator', url: '/tools/uuid', icon: 'ID', description: 'Generate unique identifiers' },
      { name: 'URL Encoder', url: '/tools/url', icon: 'URL', description: 'Encode and decode URLs' },
      { name: 'Hex Converter', url: '/tools/hex', icon: '0x', description: 'Convert between hex and text' },
      { name: 'Binary Converter', url: '/tools/binary', icon: '01', description: 'Binary, hex, and decimal conversion' },
    ]
  },
  'Security & Crypto': {
    icon: 'üîê',
    color: '#764ba2',
    tools: [
      { name: 'Hash Generator', url: '/tools/hash', icon: '#', description: 'MD5, SHA-256, and more' },
      { name: 'Password Generator', url: '/tools/password', icon: 'üîë', description: 'Create secure passwords' },
      { name: 'JWT Debugger', url: '/tools/jwt', icon: 'JWT', description: 'Decode and verify JWT tokens' },
      { name: 'RSA Keys', url: '/tools/rsa', icon: 'RSA', description: 'Generate RSA key pairs' },
      { name: 'Bcrypt Hasher', url: '/tools/bcrypt', icon: 'üîí', description: 'Generate bcrypt hashes' },
      { name: 'AES Encryption', url: '/tools/aes', icon: 'AES', description: 'Encrypt with AES' },
      { name: 'PGP Toolkit', url: '/tools/pgp', icon: 'PGP', description: 'PGP encryption tools' },
      { name: 'SSH Keys', url: '/tools/ssh-key', icon: 'SSH', description: 'Generate SSH key pairs' },
      { name: 'SSL Checker', url: '/tools/ssl', icon: 'üîê', description: 'Check SSL certificates' },
    ]
  },
  'Text & Format': {
    icon: 'üìù',
    color: '#4caf50',
    tools: [
      { name: 'Diff Checker', url: '/tools/diff', icon: '¬±', description: 'Compare text differences' },
      { name: 'Regex Tester', url: '/tools/regex', icon: '.*', description: 'Test regular expressions' },
      { name: 'Markdown Editor', url: '/tools/markdown', icon: 'MD', description: 'Live markdown preview' },
      { name: 'Case Converter', url: '/tools/case', icon: 'Aa', description: 'Convert text case' },
      { name: 'Lorem Ipsum', url: '/tools/lorem', icon: 'Lo', description: 'Generate placeholder text' },
      { name: 'Word Counter', url: '/tools/word-counter', icon: 'üìä', description: 'Count words and characters' },
      { name: 'Text Stats', url: '/tools/text-stats', icon: 'üìà', description: 'Analyze text statistics' },
      { name: 'Escape/Unescape', url: '/tools/escape', icon: '\\', description: 'Escape special characters' },
    ]
  },
  'Code Tools': {
    icon: 'üíª',
    color: '#ff6b6b',
    tools: [
      { name: 'Code Minifier', url: '/tools/minify', icon: '‚Äî', description: 'Minify JS, CSS, HTML' },
      { name: 'Code Beautifier', url: '/tools/beautify', icon: '‚ú®', description: 'Format and beautify code' },
      { name: 'SQL Formatter', url: '/tools/sql', icon: 'SQL', description: 'Format SQL queries' },
      { name: 'JS Formatter', url: '/tools/js-formatter', icon: 'JS', description: 'Format JavaScript' },
      { name: 'CSS Formatter', url: '/tools/css-formatter', icon: 'CSS', description: 'Format CSS code' },
      { name: 'Prettifier', url: '/tools/prettify', icon: '‚ú®', description: 'Prettify any code' },
    ]
  },
  'Data Formats': {
    icon: 'üìä',
    color: '#ffd93d',
    tools: [
      { name: 'YAML Validator', url: '/tools/yaml', icon: 'YAML', description: 'Validate YAML syntax' },
      { name: 'XML Formatter', url: '/tools/xml', icon: 'XML', description: 'Format XML documents' },
      { name: 'CSV Editor', url: '/tools/csv', icon: 'CSV', description: 'Edit CSV files' },
      { name: 'HTML Entities', url: '/tools/html-entities', icon: '&lt;', description: 'Encode HTML entities' },
    ]
  },
  'Network & Web': {
    icon: 'üåê',
    color: '#00bcd4',
    tools: [
      { name: 'API Tester', url: '/tools/api', icon: 'API', description: 'Test REST APIs' },
      { name: 'Webhook Tester', url: '/tools/webhook', icon: 'ü™ù', description: 'Test webhooks' },
      { name: 'DNS Lookup', url: '/tools/dns', icon: 'DNS', description: 'DNS record lookup' },
      { name: 'IP Tools', url: '/tools/ip', icon: 'IP', description: 'IP address utilities' },
      { name: 'Port Checker', url: '/tools/ports', icon: 'üîå', description: 'Network port reference' },
      { name: 'HTTP Status', url: '/tools/http', icon: 'HTTP', description: 'HTTP status codes' },
      { name: 'User Agent Parser', url: '/tools/ua', icon: 'UA', description: 'Parse user agents' },
      { name: 'MIME Types', url: '/tools/mime', icon: 'MIME', description: 'MIME type lookup' },
    ]
  },
  'Generators': {
    icon: '‚öôÔ∏è',
    color: '#9c27b0',
    tools: [
      { name: 'QR Code', url: '/tools/qr', icon: '‚ñ¶', description: 'Generate QR codes' },
      { name: 'Barcode', url: '/tools/barcode', icon: '|||', description: 'Generate barcodes' },
      { name: 'ASCII Art', url: '/tools/ascii-art', icon: 'üé≠', description: 'Create ASCII art' },
      { name: 'Color Converter', url: '/tools/color', icon: 'üé®', description: 'Convert color formats' },
      { name: 'Favicon', url: '/tools/favicon', icon: 'üîñ', description: 'Generate favicons' },
      { name: 'Meta Tags', url: '/tools/meta', icon: '<>', description: 'Generate meta tags' },
      { name: 'Robots.txt', url: '/tools/robots', icon: 'ü§ñ', description: 'Generate robots.txt' },
      { name: 'Sitemap', url: '/tools/sitemap', icon: 'üó∫', description: 'Generate sitemaps' },
    ]
  },
  'Time & Date': {
    icon: '‚è∞',
    color: '#ff9800',
    tools: [
      { name: 'Timestamp', url: '/tools/timestamp', icon: 'üïê', description: 'Unix timestamp converter' },
      { name: 'Date Formatter', url: '/tools/date-format', icon: 'üìÖ', description: 'Format dates' },
      { name: 'Cron Builder', url: '/tools/cron', icon: '‚è≤', description: 'Build cron expressions' },
      { name: 'Pomodoro Timer', url: '/tools/pomodoro', icon: 'üçÖ', description: 'Productivity timer' },
    ]
  },
  'Validators': {
    icon: '‚úÖ',
    color: '#4caf50',
    tools: [
      { name: 'Email Validator', url: '/tools/email-validator', icon: '@', description: 'Validate emails' },
      { name: 'URL Validator', url: '/tools/url-validator', icon: 'üîó', description: 'Validate URLs' },
      { name: 'Credit Card', url: '/tools/credit-card', icon: 'üí≥', description: 'Validate card numbers' },
      { name: 'Unicode Explorer', url: '/tools/unicode', icon: 'U+', description: 'Explore Unicode' },
    ]
  },
  'DevOps': {
    icon: 'üöÄ',
    color: '#e91e63',
    tools: [
      { name: 'Docker Validator', url: '/tools/docker', icon: 'üê≥', description: 'Validate Docker files' },
      { name: 'Git Commands', url: '/tools/git', icon: 'Git', description: 'Git command builder' },
      { name: 'Chmod Calculator', url: '/tools/chmod', icon: '755', description: 'Unix permissions' },
      { name: 'Htpasswd', url: '/tools/htpasswd', icon: '.ht', description: 'Generate htpasswd' },
      { name: 'Certificate Decoder', url: '/tools/cert', icon: 'üìú', description: 'Decode certificates' },
    ]
  },
  'Converters': {
    icon: 'üîÑ',
    color: '#607d8b',
    tools: [
      { name: 'Unit Converter', url: '/tools/unit', icon: 'üìè', description: 'Convert units' },
      { name: 'Number Base', url: '/tools/number-base', icon: '123', description: 'Number base conversion' },
      { name: 'Color Palette', url: '/tools/colors', icon: 'üé®', description: 'Generate color schemes' },
      { name: 'Image Optimizer', url: '/tools/image', icon: 'üñº', description: 'Optimize images' },
      { name: 'ASCII Converter', url: '/tools/ascii', icon: 'ASC', description: 'ASCII conversions' },
      { name: 'Entity Encoder', url: '/tools/entity', icon: '&', description: 'HTML entities' },
      { name: 'Text Encryption', url: '/tools/encryption', icon: 'üîê', description: 'Encrypt text' },
    ]
  }
};

const totalTools = Object.values(categories).reduce((sum, cat) => sum + cat.tools.length, 0);

// Create structured data for the tools collection
const structuredData = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": seoTitle,
  "description": seoDescription,
  "url": canonicalURL,
  "publisher": {
    "@type": "Organization",
    "name": "Caiatech",
    "url": "https://caiatech.com",
    "logo": {
      "@type": "ImageObject",
      "url": "https://caiatech.com/favicon.ico"
    }
  },
  "numberOfItems": totalTools,
  "hasPart": Object.values(categories).flatMap(cat => 
    cat.tools.map(tool => ({
      "@type": "SoftwareApplication",
      "name": tool.name,
      "description": tool.description,
      "url": `https://caiatech.com${tool.url}`,
      "applicationCategory": "DeveloperApplication",
      "operatingSystem": "Web Browser",
      "offers": {
        "@type": "Offer",
        "price": "0",
        "priceCurrency": "USD"
      }
    }))
  )
};
---

<BaseLayout 
  title={seoTitle}
  description={seoDescription}
  canonical={canonicalURL}
>
  <!-- Structured Data for SEO -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
  
  <!-- Breadcrumb Navigation for SEO -->
  <nav aria-label="Breadcrumb" class="breadcrumb">
    <ol itemscope itemtype="https://schema.org/BreadcrumbList">
      <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
        <a itemprop="item" href="/">
          <span itemprop="name">Home</span>
        </a>
        <meta itemprop="position" content="1" />
      </li>
      <li class="separator">‚Ä∫</li>
      <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
        <span itemprop="name">Developer Tools</span>
        <meta itemprop="position" content="2" />
      </li>
    </ol>
  </nav>

  <div class="tools-page">
    <!-- Cyberpunk Hero Section -->
    <section class="hero-section">
      <div class="hero-content">
        <div class="glitch-text">
          <h1 class="glitch" data-text="DEVELOPER TOOLS">DEVELOPER TOOLS</h1>
        </div>
        <div class="hero-stats">
          <div class="stat-item">
            <span class="stat-number">{totalTools}</span>
            <span class="stat-label">Tools Available</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">100%</span>
            <span class="stat-label">Privacy Focused</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">0</span>
            <span class="stat-label">Data Collected</span>
          </div>
        </div>
        <p class="hero-description">
          Professional developer utilities running entirely in your browser. 
          <span class="accent">Zero tracking, zero servers, maximum privacy.</span>
        </p>
      </div>

      <!-- Privacy Terminal -->
      <div class="privacy-terminal">
        <div class="terminal-header">
          <div class="terminal-controls">
            <span class="control red"></span>
            <span class="control yellow"></span>
            <span class="control green"></span>
          </div>
          <span class="terminal-title">PRIVACY://GUARANTEE</span>
        </div>
        <div class="terminal-body">
          <div class="terminal-line">
            <span class="prompt">$</span>
            <span class="command">verify --privacy-mode</span>
          </div>
          <div class="terminal-line output">
            <span class="success">‚úì</span> No cookies or tracking
          </div>
          <div class="terminal-line output">
            <span class="success">‚úì</span> Works completely offline
          </div>
          <div class="terminal-line output">
            <span class="success">‚úì</span> No data leaves browser
          </div>
          <div class="terminal-line output">
            <span class="success">‚úì</span> No analytics scripts
          </div>
          <div class="terminal-line output">
            <span class="success">‚úì</span> Open source code <a href="https://github.com/Caia-Tech/caiatech.com" target="_blank" rel="noopener noreferrer" style="color: #00d4ff; text-decoration: none;">[GitHub ‚Üí]</a>
          </div>
          <div class="terminal-line">
            <span class="prompt">$</span>
            <span class="cursor">_</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Search Section -->
    <section class="search-section">
      <div class="container">
        <div class="search-container">
          <input 
            type="text" 
            id="toolSearch" 
            class="search-input" 
            placeholder="$ search tools... (e.g., json, hash, base64)"
            autocomplete="off"
          />
          <div class="search-info">
            <span id="searchResults">All tools visible</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Tools Grid -->
    <section class="tools-section">
      <div class="container">
        {Object.entries(categories).map(([categoryName, category]) => (
          <div class="category-section">
            <div class="category-header">
              <div class="category-icon" style={`background: linear-gradient(135deg, ${category.color}40, ${category.color}20); border-color: ${category.color};`}>
                {category.icon}
              </div>
              <h2 class="category-title">{categoryName}</h2>
              <span class="category-count">{category.tools.length} tools</span>
            </div>
            
            <div class="tools-grid">
              {category.tools.map(tool => (
                <a href={tool.url} class="tool-card">
                  <div class="tool-icon">{tool.icon}</div>
                  <div class="tool-content">
                    <h3 class="tool-name">{tool.name}</h3>
                    <p class="tool-description">{tool.description}</p>
                  </div>
                  <div class="tool-arrow">‚Üí</div>
                </a>
              ))}
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Footer -->
    <footer class="tools-footer">
      <div class="footer-content">
        <div class="footer-brand">
          <span class="brand-text">¬© 2025 Caiatech</span>
          <span class="separator">‚Ä¢</span>
          <span class="tagline">Professional Developer Tools</span>
        </div>
        <p class="footer-description">
          All tools process data locally in your browser for maximum privacy and security.
        </p>
      </div>
    </footer>
  </div>
</BaseLayout>

<style>
  .tools-page {
    min-height: 100vh;
    background: var(--color-bg);
  }

  /* Hero Section */
  .hero-section {
    position: relative;
    padding: 4rem 2rem;
    background: linear-gradient(135deg, var(--color-bg) 0%, #151516 100%);
    overflow: hidden;
  }

  .hero-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 50%, rgba(0, 212, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 50%, rgba(118, 75, 162, 0.1) 0%, transparent 50%);
    pointer-events: none;
  }

  .hero-content {
    max-width: 1200px;
    margin: 0 auto 3rem;
    text-align: center;
    position: relative;
    z-index: 1;
  }

  /* Glitch Effect */
  .glitch {
    font-family: var(--font-mono);
    font-size: clamp(2rem, 5vw, 4rem);
    font-weight: 700;
    text-transform: uppercase;
    position: relative;
    color: var(--color-text);
    letter-spacing: 0.05em;
    margin: 0 0 2rem 0;
  }

  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch::before {
    animation: glitch-1 0.3s infinite;
    color: var(--color-accent);
    z-index: -1;
  }

  .glitch::after {
    animation: glitch-2 0.3s infinite;
    color: #764ba2;
    z-index: -2;
  }

  @keyframes glitch-1 {
    0%, 100% { clip: rect(0, 900px, 0, 0); }
    10% { clip: rect(33px, 900px, 85px, 0); }
    20% { clip: rect(15px, 900px, 140px, 0); }
    30% { clip: rect(1px, 900px, 120px, 0); }
    40% { clip: rect(35px, 900px, 45px, 0); }
    50% { clip: rect(60px, 900px, 75px, 0); }
    60% { clip: rect(20px, 900px, 100px, 0); }
    70% { clip: rect(80px, 900px, 60px, 0); }
    80% { clip: rect(10px, 900px, 90px, 0); }
    90% { clip: rect(50px, 900px, 35px, 0); }
  }

  @keyframes glitch-2 {
    0%, 100% { clip: rect(0, 900px, 0, 0); }
    10% { clip: rect(25px, 900px, 100px, 0); transform: translate(-2px, 2px); }
    20% { clip: rect(50px, 900px, 60px, 0); transform: translate(2px, -2px); }
    30% { clip: rect(70px, 900px, 85px, 0); transform: translate(-1px, 1px); }
    40% { clip: rect(40px, 900px, 95px, 0); transform: translate(1px, -1px); }
    50% { clip: rect(5px, 900px, 140px, 0); transform: translate(-2px, 0); }
    60% { clip: rect(85px, 900px, 35px, 0); transform: translate(2px, 1px); }
    70% { clip: rect(20px, 900px, 120px, 0); transform: translate(-1px, -2px); }
    80% { clip: rect(65px, 900px, 45px, 0); transform: translate(1px, 2px); }
    90% { clip: rect(30px, 900px, 110px, 0); transform: translate(-2px, -1px); }
  }

  .hero-stats {
    display: flex;
    justify-content: center;
    gap: 4rem;
    margin: 2rem 0;
  }

  .stat-item {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .stat-number {
    font-family: var(--font-mono);
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-accent);
    text-shadow: 0 0 20px rgba(0, 212, 255, 0.5);
  }

  .stat-label {
    font-size: 0.9rem;
    color: var(--color-text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin-top: 0.5rem;
  }

  .hero-description {
    font-size: 1.1rem;
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 2rem auto 0;
    line-height: 1.6;
  }

  .hero-description .accent {
    color: var(--color-accent);
    font-weight: 600;
  }

  /* Privacy Terminal */
  .privacy-terminal {
    max-width: 600px;
    margin: 0 auto;
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 
      0 20px 60px rgba(0, 0, 0, 0.3),
      0 0 100px rgba(0, 212, 255, 0.05);
  }

  .terminal-header {
    background: linear-gradient(90deg, rgba(42, 42, 43, 1) 0%, rgba(26, 26, 27, 1) 100%);
    padding: 0.75rem 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    border-bottom: 1px solid var(--color-border);
  }

  .terminal-controls {
    display: flex;
    gap: 0.5rem;
  }

  .control {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }

  .control.red { 
    background: #ff5f57; 
    box-shadow: 0 0 10px rgba(255, 95, 87, 0.5);
  }
  .control.yellow { 
    background: #ffbd2e; 
    box-shadow: 0 0 10px rgba(255, 189, 46, 0.5);
  }
  .control.green { 
    background: #28ca42; 
    box-shadow: 0 0 10px rgba(40, 202, 66, 0.5);
  }

  .terminal-title {
    font-family: var(--font-mono);
    font-size: 0.8rem;
    color: var(--color-accent);
    margin-left: auto;
    text-transform: uppercase;
    letter-spacing: 1px;
    opacity: 0.8;
  }

  .terminal-body {
    padding: 1.5rem;
    font-family: var(--font-mono);
    font-size: 0.9rem;
    line-height: 1.8;
  }

  .terminal-line {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
  }

  .prompt {
    color: var(--color-accent);
    font-weight: bold;
  }

  .command {
    color: var(--color-text);
  }

  .output {
    color: var(--color-text-secondary);
    padding-left: 1.5rem;
  }

  .success {
    color: #4caf50;
  }

  .cursor {
    animation: blink 1s infinite;
    color: var(--color-accent);
  }

  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  /* Tools Section */
  .tools-section {
    padding: 4rem 2rem;
  }

  .container {
    max-width: 1400px;
    margin: 0 auto;
  }

  .category-section {
    margin-bottom: 4rem;
  }

  .category-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .category-icon {
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    border-radius: 12px;
    border: 2px solid;
  }

  .category-title {
    font-family: var(--font-mono);
    font-size: 1.5rem;
    color: var(--color-text);
    margin: 0;
    flex: 1;
  }

  .category-count {
    font-family: var(--font-mono);
    font-size: 0.9rem;
    color: var(--color-text-secondary);
    padding: 0.25rem 0.75rem;
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 20px;
  }

  .tools-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1rem;
  }

  .tool-card {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.25rem;
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .tool-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(0, 212, 255, 0.1), transparent);
    transition: left 0.5s;
  }

  .tool-card:hover::before {
    left: 100%;
  }

  .tool-card:hover {
    transform: translateY(-2px);
    border-color: var(--color-accent);
    box-shadow: 
      0 10px 30px rgba(0, 0, 0, 0.2),
      0 0 30px rgba(0, 212, 255, 0.1);
  }

  .tool-icon {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 212, 255, 0.1);
    border: 1px solid rgba(0, 212, 255, 0.3);
    border-radius: 8px;
    font-family: var(--font-mono);
    font-size: 0.9rem;
    color: var(--color-accent);
    flex-shrink: 0;
  }

  .tool-content {
    flex: 1;
  }

  .tool-name {
    font-size: 1rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 0 0 0.25rem 0;
  }

  .tool-description {
    font-size: 0.85rem;
    color: var(--color-text-secondary);
    margin: 0;
    line-height: 1.4;
  }

  .tool-arrow {
    color: var(--color-accent);
    opacity: 0;
    transform: translateX(-10px);
    transition: all 0.3s;
  }

  .tool-card:hover .tool-arrow {
    opacity: 1;
    transform: translateX(0);
  }

  /* Footer */
  .tools-footer {
    padding: 3rem 2rem;
    background: var(--color-surface);
    border-top: 1px solid var(--color-border);
    margin-top: 4rem;
  }

  .footer-content {
    max-width: 1200px;
    margin: 0 auto;
    text-align: center;
  }

  .footer-brand {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .brand-text {
    font-family: var(--font-mono);
    color: var(--color-accent);
    font-weight: 600;
  }

  .separator {
    color: var(--color-text-secondary);
    opacity: 0.3;
  }

  .tagline {
    color: var(--color-text-secondary);
  }

  .footer-description {
    color: var(--color-text-secondary);
    font-size: 0.9rem;
    margin: 0;
  }

  /* Breadcrumb Navigation */
  .breadcrumb {
    padding: 1rem 2rem;
    background: var(--color-surface);
    border-bottom: 1px solid var(--color-border);
  }

  .breadcrumb ol {
    display: flex;
    align-items: center;
    list-style: none;
    margin: 0;
    padding: 0;
    max-width: 1400px;
    margin: 0 auto;
  }

  .breadcrumb li {
    font-family: var(--font-mono);
    font-size: 0.9rem;
  }

  .breadcrumb a {
    color: var(--color-text-secondary);
    text-decoration: none;
    transition: color 0.2s;
  }

  .breadcrumb a:hover {
    color: var(--color-accent);
  }

  .breadcrumb .separator {
    margin: 0 0.5rem;
    color: var(--color-text-secondary);
    opacity: 0.5;
  }

  .breadcrumb li:last-child span {
    color: var(--color-accent);
  }

  /* Search Section */
  .search-section {
    padding: 2rem;
    background: linear-gradient(135deg, rgba(0, 212, 255, 0.02) 0%, transparent 100%);
    border-top: 1px solid var(--color-border);
    border-bottom: 1px solid var(--color-border);
  }

  .search-container {
    max-width: 600px;
    margin: 0 auto;
  }

  .search-input {
    width: 100%;
    padding: 1rem 1.5rem;
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    color: var(--color-text);
    font-family: var(--font-mono);
    font-size: 1rem;
    transition: all 0.3s ease;
  }

  .search-input::placeholder {
    color: var(--color-text-secondary);
    opacity: 0.6;
  }

  .search-input:focus {
    outline: none;
    border-color: var(--color-accent);
    box-shadow: 0 0 20px rgba(0, 212, 255, 0.1);
  }

  .search-info {
    margin-top: 0.5rem;
    font-family: var(--font-mono);
    font-size: 0.85rem;
    color: var(--color-text-secondary);
    text-align: center;
  }

  #searchResults {
    color: var(--color-accent);
  }

  .category-section.hidden {
    display: none;
  }

  .tool-card.hidden {
    display: none;
  }

  .no-results {
    text-align: center;
    padding: 4rem 2rem;
    font-family: var(--font-mono);
    color: var(--color-text-secondary);
  }

  .no-results h3 {
    color: var(--color-text);
    margin-bottom: 1rem;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero-stats {
      flex-direction: column;
      gap: 2rem;
    }

    .tools-grid {
      grid-template-columns: 1fr;
    }

    .category-header {
      flex-wrap: wrap;
    }

    .glitch {
      font-size: 2rem;
    }

    .search-section {
      padding: 1.5rem 1rem;
    }
  }
</style>

<script>
  // Search functionality
  const searchInput = document.getElementById('toolSearch') as HTMLInputElement;
  const searchResults = document.getElementById('searchResults');
  const categorySections = document.querySelectorAll('.category-section');
  
  if (searchInput) {
    searchInput.addEventListener('input', (e) => {
      const query = (e.target as HTMLInputElement).value.toLowerCase().trim();
      
      if (!query) {
        // Show all tools when search is empty
        categorySections.forEach(section => {
          section.classList.remove('hidden');
          const cards = section.querySelectorAll('.tool-card');
          cards.forEach(card => card.classList.remove('hidden'));
        });
        if (searchResults) {
          searchResults.textContent = 'All tools visible';
        }
        return;
      }
      
      let totalMatches = 0;
      let visibleCategories = 0;
      
      categorySections.forEach(section => {
        const cards = section.querySelectorAll('.tool-card');
        let categoryMatches = 0;
        
        cards.forEach(card => {
          const name = card.querySelector('.tool-name')?.textContent?.toLowerCase() || '';
          const description = card.querySelector('.tool-description')?.textContent?.toLowerCase() || '';
          const icon = card.querySelector('.tool-icon')?.textContent?.toLowerCase() || '';
          
          if (name.includes(query) || description.includes(query) || icon.includes(query)) {
            card.classList.remove('hidden');
            categoryMatches++;
            totalMatches++;
          } else {
            card.classList.add('hidden');
          }
        });
        
        // Hide category if no tools match
        if (categoryMatches === 0) {
          section.classList.add('hidden');
        } else {
          section.classList.remove('hidden');
          visibleCategories++;
        }
      });
      
      // Update search results text
      if (searchResults) {
        if (totalMatches === 0) {
          searchResults.textContent = 'No tools found';
        } else if (totalMatches === 1) {
          searchResults.textContent = '1 tool found';
        } else {
          searchResults.textContent = `${totalMatches} tools found`;
        }
      }
    });
    
    // Handle Escape key to clear search
    searchInput.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        searchInput.value = '';
        searchInput.dispatchEvent(new Event('input'));
      }
    });
  }
</script>