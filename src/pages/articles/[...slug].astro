---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }));
}

const article = Astro.props;
const { Content } = await article.render();
---

<BaseLayout 
  title={`${article.data.title} - Caia Tech`}
  description={article.data.description}
  canonical={`https://caiatech.com/articles/${article.slug}/`}
>
  <article class="article-page" itemscope itemtype="https://schema.org/TechArticle">
    <div class="container">
      <header class="article-header">
        <div class="breadcrumb">
          <a href="/" class="breadcrumb-link">
            <span class="prompt">~</span>
          </a>
          <span class="separator">/</span>
          <a href="/articles/" class="breadcrumb-link">articles</a>
          <span class="separator">/</span>
          <span class="current">{article.slug}</span>
        </div>
        
        <h1 itemprop="headline" class="article-title">{article.data.title}</h1>
        
        <div class="article-meta">
          <time itemprop="datePublished" datetime={article.data.pubDate.toISOString()} class="article-date">
            {article.data.pubDate.toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}
          </time>
          {article.data.updatedDate && (
            <>
              <span class="separator">•</span>
              <time itemprop="dateModified" datetime={article.data.updatedDate.toISOString()} class="article-date">
                Updated: {article.data.updatedDate.toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'short', 
                  day: 'numeric' 
                })}
              </time>
            </>
          )}
          <span class="separator">•</span>
          <span itemprop="author" class="article-author">{article.data.author}</span>
        </div>

        <div class="article-tags">
          {article.data.tags.map((tag) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      </header>

      <div class="article-content" itemprop="articleBody">
        <Content />
      </div>

      <footer class="article-footer">
        <div class="footer-nav">
          <a href="/articles/" class="nav-link">
            <span class="prompt">$</span> cd ../
            <span class="nav-text">Back to Articles</span>
          </a>
        </div>
      </footer>
    </div>
  </article>

  <script type="application/ld+json">
    {JSON.stringify({
      "@context": "https://schema.org",
      "@type": "TechArticle",
      "headline": article.data.title,
      "description": article.data.description,
      "author": {
        "@type": "Organization",
        "name": article.data.author
      },
      "datePublished": article.data.pubDate.toISOString(),
      "dateModified": article.data.updatedDate?.toISOString() || article.data.pubDate.toISOString(),
      "publisher": {
        "@type": "Organization",
        "name": "Caia Tech",
        "url": "https://caiatech.com"
      },
      "keywords": article.data.tags.join(", "),
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": `https://caiatech.com/articles/${article.slug}/`
      }
    })}
  </script>
</BaseLayout>

<style>
  .article-page {
    min-height: calc(100vh - 60px);
    padding: 4rem 0;
    background: linear-gradient(135deg, var(--color-bg) 0%, #151516 100%);
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .article-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--color-border);
  }

  .breadcrumb {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 2rem;
    font-family: var(--font-mono);
    font-size: 0.9rem;
  }

  .breadcrumb-link {
    color: var(--color-text-secondary);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .breadcrumb-link:hover {
    color: var(--color-accent);
  }

  .prompt {
    color: var(--color-accent);
  }

  .separator {
    color: var(--color-text-secondary);
    opacity: 0.5;
  }

  .current {
    color: var(--color-accent);
  }

  .article-title {
    font-size: clamp(2rem, 5vw, 3rem);
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    color: var(--color-text);
  }

  .article-meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1.5rem;
    color: var(--color-text-secondary);
    font-size: 0.95rem;
  }

  .article-date {
    font-family: var(--font-mono);
  }

  .article-author {
    font-family: var(--font-mono);
    color: var(--color-accent);
  }

  .article-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    color: var(--color-text-secondary);
    padding: 0.35rem 0.85rem;
    border-radius: 0.35rem;
    font-size: 0.85rem;
    font-family: var(--font-mono);
    transition: all 0.2s ease;
  }

  .tag:hover {
    border-color: var(--color-accent);
    color: var(--color-accent);
  }

  .article-content {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--color-text);
  }

  .article-content :global(h2) {
    font-size: 1.8rem;
    font-weight: 600;
    margin: 2.5rem 0 1.5rem;
    color: var(--color-text);
  }

  .article-content :global(h3) {
    font-size: 1.4rem;
    font-weight: 600;
    margin: 2rem 0 1rem;
    color: var(--color-text);
  }

  .article-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .article-content :global(ul),
  .article-content :global(ol) {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .article-content :global(li) {
    margin-bottom: 0.75rem;
    line-height: 1.7;
  }

  .article-content :global(strong) {
    color: var(--color-accent);
    font-weight: 600;
  }

  .article-content :global(em) {
    font-style: italic;
    color: var(--color-text);
  }

  .article-content :global(code) {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    padding: 0.2rem 0.5rem;
    border-radius: 0.25rem;
    font-family: var(--font-mono);
    font-size: 0.9em;
    color: var(--color-accent);
  }

  .article-content :global(pre) {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 0.5rem;
    padding: 1.5rem;
    margin: 2rem 0;
    overflow-x: auto;
  }

  .article-content :global(pre code) {
    background: none;
    border: none;
    padding: 0;
    font-size: 0.95rem;
    color: var(--color-text);
  }

  .article-content :global(blockquote) {
    border-left: 3px solid var(--color-accent);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--color-text-secondary);
  }

  .article-content :global(a) {
    color: var(--color-accent);
    text-decoration: underline;
    text-underline-offset: 0.2em;
    transition: all 0.2s ease;
  }

  .article-content :global(a:hover) {
    color: var(--color-accent-hover);
    text-shadow: 0 0 10px rgba(0, 212, 255, 0.3);
  }

  .article-content :global(hr) {
    border: none;
    border-top: 1px solid var(--color-border);
    margin: 3rem 0;
  }

  .article-footer {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-border);
  }

  .footer-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .nav-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--color-text-secondary);
    text-decoration: none;
    font-family: var(--font-mono);
    transition: all 0.2s ease;
  }

  .nav-link:hover {
    color: var(--color-accent);
  }

  .nav-link:hover .prompt {
    color: var(--color-accent);
  }

  .nav-text {
    font-size: 0.95rem;
  }

  @media (max-width: 768px) {
    .article-content {
      font-size: 1rem;
    }

    .article-content :global(h2) {
      font-size: 1.5rem;
    }

    .article-content :global(h3) {
      font-size: 1.25rem;
    }

    .article-meta {
      font-size: 0.85rem;
    }
  }
</style>